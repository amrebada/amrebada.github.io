{"version":3,"sources":["components/Navbar.js","components/Item.js","components/Cart.js","data/items.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faSearch","faShoppingCart","faPowerOff","Navbar","props","react_default","a","createElement","AppBar_default","position","color","className","index_es","Typography_default","variant","title","react_fontawesome_index_es","icon","placeholder","onChange","search","style","flexGrow","Badge_default","badgeContent","items","onClick","logout","size","faPlus","faMinus","faShoppingBag","styles","card","width","media","height","paddingTop","actions","display","expand","transform","marginLeft","expandOpen","avatar","backgroundColor","red","Item","item","_props$item","id","img","description","amount","sub","Card_default","CardHeader_default","Avatar_default","aria-label","subheader","CardMedia_default","image","CardContent_default","component","CardActions_default","disableActionSpacing","IconButton_default","bind","margin","Chip_default","label","green","grey","faTrash","faShoppingBasket","Cart","selectedItems","total","forEach","List_default","overflowY","boxShadow","map","primary","secondary","concat","Button_default","resetItem","fontSize","Fab_default","reset","marginRight","checkout","Promise","resolve","reject","fetch","then","response","json","_items","i","length","Object","toConsumableArray","userId","completed","console","log","catch","err","Login","_useState","useState","username","password","_useState2","slicedToArray","state","setState","textAlign","event","objectSpread","currentTarget","value","type","logged","disabled","login","top","left","marginTop","App","searchItems","status","addHandler","_this$state","_this","subHandler","_this$state2","resetHandler","_this$state3","resetItemHandler","_this$state4","checkoutHandler","alert","JSON","stringify","filter","searchHandler","includes","target","loginHandler","_callee","regenerator_default","wrap","_context","prev","next","setData","stop","logoutHandler","itemsData","this","_this2","components_Navbar","components_Item","key","components_Cart","components_Login","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c13fb7f7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Components.css\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { Toolbar, Button } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faShoppingCart,\n  faPowerOff\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Badge from \"@material-ui/core/Badge\";\n\nlibrary.add(faSearch);\nlibrary.add(faShoppingCart, faPowerOff);\n\nconst Navbar = props => {\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className=\"navbar\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {props.title}\n        </Typography>\n        &nbsp;\n        {/* <h3 className=\"inline\">Items: {props.items}</h3> */}\n        <div className=\"search\">\n          <div className=\"inline search-icon\">\n            <FontAwesomeIcon icon=\"search\" />\n          </div>\n          &nbsp;\n          <input\n            placeholder=\"Search…\"\n            onChange={props.search}\n            className=\"inline input-input\"\n          />\n        </div>\n        <div style={{ flexGrow: 1 }} />\n        <Badge badgeContent={props.items} color=\"secondary\">\n          <FontAwesomeIcon icon=\"shopping-cart\" />\n        </Badge>\n        &nbsp;\n        <Button\n          onClick={props.logout}\n          variant=\"text\"\n          size=\"small\"\n          color=\"inherit\"\n        >\n          <FontAwesomeIcon onClick={props.logout} icon=\"power-off\" />\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Components.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {\n  faPlus,\n  faMinus,\n  faShoppingBag\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faPlus);\nlibrary.add(faMinus);\nlibrary.add(faShoppingBag);\nconst styles = {\n  card: {\n    width: \"20%\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  actions: {\n    display: \"flex\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\"\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[400]\n  }\n};\nconst Item = props => {\n  if (props.item) {\n    const { id, img, title, description, amount } = props.item;\n    const add = props.add;\n    const sub = props.sub;\n    // return (\n    //   <div className=\"item inline\">\n    //     <img src={img} alt={title} />\n    //     <h3>{title}</h3>\n    //     <p>{description}</p>\n    //     <div>\n    //       <button className=\"inline\" onClick={sub.bind(null, id)}>\n    //         -\n    //       </button>\n    //       <span className=\"inline\">{amount}</span>\n    //       <button className=\"inline\" onClick={add.bind(null, id)}>\n    //         +\n    //       </button>\n    //     </div>\n    //   </div>\n    // );\n\n    return (\n      <Card className=\"inline\" style={styles.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"Recipe\" style={styles.avatar}>\n              <FontAwesomeIcon icon=\"shopping-bag\" />\n            </Avatar>\n          }\n          title={title}\n          subheader=\"\"\n        />\n        <CardMedia image={img} title={title} style={styles.media} />\n        <CardContent>\n          <Typography component=\"p\">{description}</Typography>\n        </CardContent>\n        <CardActions disableActionSpacing style={styles.actions}>\n          <IconButton\n            onClick={sub.bind(null, id)}\n            style={{ margin: \"10px auto\" }}\n            aria-label=\"remove\"\n          >\n            <FontAwesomeIcon icon=\"minus\" />\n          </IconButton>\n          <Chip\n            label={amount}\n            style={\n              amount > 0\n                ? {\n                    backgroundColor: green[600],\n                    color: \"white\",\n                    margin: \"10px auto\"\n                  }\n                : { backgroundColor: grey[200], margin: \"10px auto\" }\n            }\n          />\n          &nbsp;\n          <IconButton\n            onClick={add.bind(null, id)}\n            aria-label=\"add\"\n            style={{ margin: \"10px auto\" }}\n          >\n            <FontAwesomeIcon icon=\"plus\" />\n          </IconButton>\n        </CardActions>\n      </Card>\n    );\n  }\n  return <p />;\n};\n\nexport default Item;\n","import React from \"react\";\nimport \"./Components.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport { green, grey } from \"@material-ui/core/colors\";\nimport { ListItem, ListItemText, Avatar } from \"@material-ui/core\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {\n  faTrash,\n  faShoppingBasket,\n  faShoppingCart\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faTrash, faShoppingBasket, faShoppingCart);\n\nconst Cart = props => {\n  if (props.selectedItems) {\n    const items = props.selectedItems;\n    let total = 0;\n    items.forEach(item => {\n      total += item.amount;\n    });\n    return (\n      <div className=\"cart\">\n        <h2>\n          {\" \"}\n          <FontAwesomeIcon icon=\"shopping-cart\" />\n          &nbsp; Cart&nbsp;\n        </h2>\n        <div style={{ flexGrow: 1 }} />\n        <List\n          style={{\n            height: 380,\n            overflowY: \"auto\",\n            boxShadow: \"0px 0px 3px #ccc\",\n            backgroundColor: grey[100]\n          }}\n        >\n          {items.map(item => (\n            <ListItem style={{ backgroundColor: \"white\" }}>\n              <Avatar style={{ backgroundColor: green[400] }}>\n                <FontAwesomeIcon icon=\"shopping-basket\" />\n              </Avatar>\n              <ListItemText\n                primary={item.title}\n                secondary={`${item.amount} QTY`}\n              />\n              <Button\n                onClick={props.resetItem.bind(null, item.id)}\n                color=\"secondary\"\n              >\n                x\n              </Button>\n            </ListItem>\n          ))}\n        </List>\n        <hr />\n        <div style={{ display: \"flex\", margin: \"14px\" }}>\n          <Chip\n            color=\"primary\"\n            style={{ margin: \"auto\", fontSize: \"1.3em\" }}\n            label={`Total: ${total} QTY`}\n          />\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <span>\n            <Fab\n              onClick={props.reset}\n              color=\"secondary\"\n              size=\"large\"\n              aria-label=\"Reset\"\n              style={{ marginRight: \"auto\" }}\n            >\n              <FontAwesomeIcon icon=\"trash\" />\n            </Fab>\n          </span>\n\n          {total > 0 ? (\n            <Button\n              size=\"large\"\n              color=\"default\"\n              variant=\"contained\"\n              onClick={props.checkout}\n              style={{\n                marginLeft: \"auto\",\n                backgroundColor: \"#2196f3\",\n                color: \"white\"\n              }}\n            >\n              <FontAwesomeIcon icon=\"shopping-basket\" />\n              &nbsp; checkout\n            </Button>\n          ) : (\n            <span />\n          )}\n        </div>\n      </div>\n    );\n  }\n  return <p />;\n};\n\nexport default Cart;\n","const items = () => {\n  return new Promise((resolve, reject) => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\n      .then(response => response.json())\n      .then(json => {\n        let _items = [];\n        for (let i = 0; i < json.length; i++) {\n          _items = [\n            ..._items,\n            {\n              id: json[i].id,\n              img: \"http://picsum.photos/200/?random\",\n              title: json[i].title,\n              description: `user wrote this todo is ${\n                json[i].userId\n              } and it is ${json[i].completed ? \"\" : \"not\"} completed`,\n              amount: 0\n            }\n          ];\n        }\n        console.log(_items);\n\n        resolve(_items);\n      })\n      .catch(err => {\n        let _items = [];\n        for (let i = 0; i < 50; i++) {\n          _items = [\n            ..._items,\n            {\n              id: i,\n              img: \"http://picsum.photos/200/?random\",\n              title: `item ${i}`,\n              description: \"Fruits that can give you a power\",\n              amount: 0\n            }\n          ];\n        }\n\n        resolve(_items);\n      });\n  });\n};\nexport default items;\n","import React, { useState } from \"react\";\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nconst Login = props => {\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Shopping Cart Login</h1>\n      <p>\n        <TextField\n          id=\"outlined-name\"\n          label=\"Name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ backgroundColor: \"white\" }}\n          onChange={event => {\n            console.log(state);\n\n            setState({ ...state, username: event.currentTarget.value });\n          }}\n        />\n      </p>\n      <p>\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          margin=\"normal\"\n          type=\"password\"\n          variant=\"outlined\"\n          style={{ backgroundColor: \"white\" }}\n          onChange={event => {\n            setState({ ...state, password: event.currentTarget.value });\n          }}\n        />\n      </p>\n      {props.logged ? (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled\n          onClick={props.login.bind(null, state.username, state.password)}\n        >\n          <CircularProgress\n            size={24}\n            className={{\n              color: green[500],\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              marginTop: -12,\n              marginLeft: -12\n            }}\n          />\n          login\n        </Button>\n      ) : (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.login.bind(null, state.username, state.password)}\n        >\n          login\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Item from \"./components/Item\";\nimport Cart from \"./components/Cart\";\nimport \"./App.css\";\nimport itemsData from \"./data/items\";\nimport Login from \"./components/Login\";\nclass App extends Component {\n  state = {\n    items: [],\n    searchItems: [],\n    logged: false,\n    status: false\n  };\n  async setData() {\n    let _items = await itemsData();\n    this.setState({\n      items: _items,\n      searchItems: _items,\n      logged: true,\n      status: false\n    });\n\n    console.log(this.state.items);\n  }\n\n  addHandler = id => {\n    const { items, searchItems } = this.state;\n    this.setState({\n      items: items.map(item =>\n        item.id === id ? { ...item, amount: item.amount + 1 } : { ...item }\n      ),\n      searchItems: searchItems.map(item =>\n        item.id === id ? { ...item, amount: item.amount + 1 } : { ...item }\n      )\n    });\n  };\n\n  subHandler = id => {\n    const { items, searchItems } = this.state;\n    this.setState({\n      items: items.map(item =>\n        item.id === id && item.amount !== 0\n          ? { ...item, amount: item.amount - 1 }\n          : { ...item }\n      ),\n      searchItems: searchItems.map(item =>\n        item.id === id && item.amount !== 0\n          ? { ...item, amount: item.amount - 1 }\n          : { ...item }\n      )\n    });\n  };\n\n  resetHandler = () => {\n    const { items, searchItems } = this.state;\n    this.setState({\n      items: items.map(item =>\n        item.amount !== 0 ? { ...item, amount: 0 } : { ...item }\n      ),\n      searchItems: searchItems.map(item =>\n        item.amount !== 0 ? { ...item, amount: 0 } : { ...item }\n      )\n    });\n  };\n\n  resetItemHandler = id => {\n    const { items, searchItems } = this.state;\n    this.setState({\n      items: items.map(item =>\n        item.id === id ? { ...item, amount: 0 } : { ...item }\n      ),\n      searchItems: searchItems.map(item =>\n        item.id === id ? { ...item, amount: 0 } : { ...item }\n      )\n    });\n  };\n\n  checkoutHandler = () => {\n    alert(JSON.stringify(this.state.items.filter(item => item.amount > 0)));\n  };\n\n  searchHandler = event => {\n    this.setState({\n      searchItems: this.state.items.filter(item =>\n        item.title.includes(event.target.value)\n      )\n    });\n  };\n\n  loginHandler = async (username, password) => {\n    if (username === \"admin\" && password === \"admin\") {\n      this.setState({\n        status: true\n      });\n      this.setData();\n    } else {\n      alert(\"wrong Creditional\");\n    }\n  };\n\n  logoutHandler = () => {\n    this.setState({\n      logged: false\n    });\n  };\n  render() {\n    if (this.state.logged) {\n      return (\n        <div>\n          <Navbar\n            title=\"Shopping Cart\"\n            items={this.state.items.filter(item => item.amount > 0).length}\n            search={this.searchHandler}\n            logout={this.logoutHandler}\n          />\n          <div style={{ width: \"80%\", marginTop: \"60px\" }} className=\"inline\">\n            {this.state.searchItems.map(item => (\n              <Item\n                key={item.id}\n                item={item}\n                add={this.addHandler}\n                sub={this.subHandler}\n              />\n            ))}\n          </div>\n          <div\n            style={{ width: \"20%\", position: \"fixed\", marginTop: \"60px\" }}\n            className=\"inline\"\n          >\n            <Cart\n              selectedItems={this.state.items.filter(item => item.amount > 0)}\n              reset={this.resetHandler}\n              checkout={this.checkoutHandler}\n              resetItem={this.resetItemHandler}\n            />\n          </div>\n        </div>\n      );\n    }\n    return <Login login={this.loginHandler} logged={this.state.status} />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}