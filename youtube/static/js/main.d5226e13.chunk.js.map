{"version":3,"sources":["components/Navbar/SearchBar/SearchBar.css","components/Navbar/LeadingControl/List/List.css","components/Navbar/Logo/Logo.css","components/Navbar/Navbar.css","components/Navbar/Logo/MenuButton/MenuButton.css","components/App/App.css","assets/logo.png","components/Navbar/LeadingControl/ListItem/ListItem.css","components/Navbar/LeadingControl/LeadingControl.css","components/Part1/Part1.js","components/Part2/Part2.js","components/Navbar/Logo/MenuButton/MenuButton.js","components/Navbar/Logo/Logo.js","components/Navbar/LeadingControl/ListItem/ListItem.js","components/Navbar/SearchBar/SearchBar.js","components/Navbar/LeadingControl/List/List.js","components/Navbar/LeadingControl/SubList/SubList.js","components/Navbar/LeadingControl/LeadingControl.js","components/Navbar/Navbar.js","components/App/App.js","serviceWorker.js","services/reducer.js","index.js"],"names":["module","exports","SearchBar","wrap","input","iconButton","Suggetions","rootSmall","rootMedium","rootLarge","header","Logo","logoimage","countrySign","Navbar","NavbarReserved","MenuButton","butt","App","__webpack_require__","p","ListItem","fadeIn","LeadingControl","SignInButton","SignInText","DropDownMenu","wrapContent","switchCheck","switch","divider","connect","state","dispatch","changeIt","b","type","payload","newb","props","react_default","a","createElement","onClick","customStyle","style","className","classes","Object","objectSpread","IconButton","aria-label","MenuOutlined","Logo_MenuButton_MenuButton","href","src","LogoImage","alt","ListItemNav","Icon","icon","button","ListItemIcon","color","ListItemText","textColor","primary","text","children","_useState","useState","_useState2","slicedToArray","setState","InputBase","size","placeholder","inputProps","onChange","evt","target","value","Button","Search","fontSize","split","length","map","s","i","LeadingControl_ListItem_ListItem","key","NestedList","sizeClass","ListSubheader","component","id","List","aria-labelledby","subheader","SubList","_React$useState","React","_React$useState2","open","setOpen","Fragment","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","disablePadding","openVideo","setOpenVideo","_useState3","_useState4","openApps","setOpenApps","_useState5","_useState6","openNotify","setOpenNotify","_useState7","_useState8","openMenu","setOpenMenu","_useState9","_useState10","toggleTheme","setToggleTheme","allSets","toggle","set","filter","forEach","other","_","prev","VideoCall","PlayCircleOutline","CastRounded","Apps","Divider","MusicVideo","Games","School","Category","Notifications","Message","MoreVert","LeadingControl_SubList_SubList","Brightness2","FormControlLabel","control","Switch","checked","thumb","label","LanguageOutlined","Settings","SecurityOutlined","HelpOutline","FeedbackOutlined","Keyboard","variant","AccountCircle","Navbar_Logo_Logo","flex","Navbar_SearchBar_SearchBar","Navbar_LeadingControl_LeadingControl","counter","c","emit","onClicked","components_Navbar_Navbar","Boolean","window","location","hostname","match","initialState","store","createStore","arguments","undefined","action","console","log","ReactDOM","render","es","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5226e13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__180GE\",\"wrap\":\"SearchBar_wrap__280YJ\",\"input\":\"SearchBar_input__1W0-s\",\"iconButton\":\"SearchBar_iconButton__ADttj\",\"Suggetions\":\"SearchBar_Suggetions__1gdTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootSmall\":\"List_rootSmall__RQnvX\",\"rootMedium\":\"List_rootMedium__2mDtu\",\"rootLarge\":\"List_rootLarge__3p9gW\",\"header\":\"List_header__1eDSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__zPqe2\",\"logoimage\":\"Logo_logoimage__1jTDJ\",\"countrySign\":\"Logo_countrySign__1Bcav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__ZKJRK\",\"NavbarReserved\":\"Navbar_NavbarReserved__hNKiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuButton\":\"MenuButton_MenuButton__2GWfb\",\"butt\":\"MenuButton_butt__3Blew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3oXlM\"};","module.exports = __webpack_public_path__ + \"static/media/logo.0d40e999.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"ListItem_ListItem__32bg3\",\"fadeIn\":\"ListItem_fadeIn__lfPq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeadingControl\":\"LeadingControl_LeadingControl__23fjO\",\"iconButton\":\"LeadingControl_iconButton__3cehn\",\"SignInButton\":\"LeadingControl_SignInButton__3YWM5\",\"SignInText\":\"LeadingControl_SignInText__3s89G\",\"DropDownMenu\":\"LeadingControl_DropDownMenu__Rg3UI\",\"wrapContent\":\"LeadingControl_wrapContent__YAa2a\",\"switchCheck\":\"LeadingControl_switchCheck__20Ebe\",\"switch\":\"LeadingControl_switch__1P9jU\",\"divider\":\"LeadingControl_divider__2ofQN\"};","import React from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Part1 = (props) => {\r\n\r\n    return (<div>\r\n\r\n        <button onClick={() => props.changeIt(props.b + 1)}>change part 2</button>\r\n    </div>);\r\n}\r\n\r\nconst mapDisparchToProps = (dispatch) => {\r\n\r\n    return {\r\n        changeIt: (b) => dispatch({ type: 'updateB', payload: { newb: b } })\r\n    }\r\n}\r\n\r\nexport default connect(state => state, mapDisparchToProps)(Part1);","import React from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Part2 = (props) => {\r\n    return (<div>\r\n        <h3>{props.b}</h3>\r\n    </div>);\r\n}\r\n\r\nexport default connect(state => state, null)(Part2);","import React, { useRef } from 'react';\r\nimport classes from \"./MenuButton.css\";\r\nimport { MenuOutlined } from '@material-ui/icons';\r\nimport { IconButton } from \"@material-ui/core\";\r\nconst MenuButton = (props) => {\r\n    let customStyle = {};\r\n    if (props.style) {\r\n        customStyle = props.style;\r\n    }\r\n\r\n\r\n    return (<div className={classes.MenuButton} style={{ ...customStyle }}>\r\n        <IconButton className={classes.butt} onClick={() => { }} aria-label=\"Menu\">\r\n            <MenuOutlined />\r\n        </IconButton>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default MenuButton;","import React from 'react';\r\nimport classes from \"./Logo.css\";\r\nimport MenuButton from './MenuButton/MenuButton';\r\nimport LogoImage from \"../../../assets/logo.png\";\r\n\r\nconst Logo = (props) => {\r\n    let customStyle = {};\r\n    if (props.style) {\r\n        customStyle = props.style;\r\n    }\r\n    return (<div className={classes.Logo} style={{ ...customStyle }}>\r\n        <MenuButton />\r\n\r\n        <a href=\"#\"><img src={LogoImage} className={classes.logoimage} alt=\"Youtube Home\" /></a>\r\n        <span className={classes.countrySign}>AE</span>\r\n    </div>);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\n\r\nimport classes from \"./ListItem.css\";\r\nconst ListItemNav = (props) => {\r\n    let Icon = props.icon;\r\n\r\n    return (\r\n        <ListItem button className={classes.ListItem}>\r\n            {Icon ? <ListItemIcon style={{ color: props.color }}>\r\n                <Icon />\r\n            </ListItemIcon> : null\r\n            }\r\n            <ListItemText style={{ color: props.textColor }} primary={props.text} />\r\n            {props.children}\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nexport default ListItemNav;","import React, { useState } from 'react';\r\n\r\nimport classes from \"./SearchBar.css\";\r\nimport { InputBase, Button } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport ListItem from \"../LeadingControl/ListItem/ListItem\";\r\n\r\nconst SearchBar = (props) => {\r\n    let customStyle = {};\r\n    if (props.style) {\r\n        customStyle = props.style;\r\n    }\r\n\r\n    const [state, setState] = useState(\"\");\r\n\r\n\r\n\r\n    return (<div className={classes.SearchBar} style={{ ...customStyle }}>\r\n        <div className={classes.wrap}>\r\n            <InputBase\r\n                size=\"small\"\r\n                className={classes.input}\r\n                placeholder=\"Search Videos\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n                onChange={(evt) => setState(evt.target.value)}\r\n            />\r\n\r\n\r\n            <Button size=\"small\" className={classes.iconButton} aria-label=\"search\">\r\n                <Search fontSize=\"small\" />\r\n            </Button>\r\n            {state.split(\"\").length !== 0 ?\r\n                <div className={classes.Suggetions}>\r\n                    {state.split(\"\").map((s, i) => <ListItem key={i} text={s} textColor=\"grey\" />)}\r\n                </div>\r\n                : null}\r\n        </div>\r\n\r\n\r\n    </div>);\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\n\r\n\r\nimport classes from \"./List.css\";\r\n\r\nexport default function NestedList(props) {\r\n    let sizeClass = classes.rootSmall;\r\n    switch (props.size) {\r\n        case \"medium\":\r\n            sizeClass = classes.rootMedium;\r\n            break;\r\n        case \"large\":\r\n            sizeClass = classes.rootLarge;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    let header = null\r\n    if (props.header) {\r\n        header = (<ListSubheader className={classes.header} component=\"div\" id=\"nested-list-subheader\">\r\n            {props.header}\r\n        </ListSubheader>);\r\n    }\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={header}\r\n            className={sizeClass}>\r\n            {props.children}\r\n\r\n        </List>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { List, ListItem, ListItemIcon, ListItemText, Collapse } from '@material-ui/core';\r\n\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nimport classes from \"./SubList.css\";\r\n\r\nconst SubList = (props) => {\r\n\r\n    let Icon = props.icon;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    function handleClick() {\r\n        setOpen(!open);\r\n    }\r\n    return (\r\n        <React.Fragment >\r\n            <ListItem button onClick={handleClick}>\r\n                {Icon ? <ListItemIcon style={{ color: props.color }}>\r\n                    <Icon />\r\n                </ListItemIcon> : null\r\n                }\r\n                <ListItemText style={{ color: props.textColor }} primary={props.text} />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    {props.children}\r\n                </List>\r\n            </Collapse>\r\n        </React.Fragment >\r\n\r\n    );\r\n}\r\n\r\nexport default SubList;","import React, { useState, useRef } from 'react';\r\n\r\nimport classes from \"./LeadingControl.css\";\r\nimport List from \"./List/List\";\r\nimport ListItem from \"./ListItem/ListItem\";\r\nimport SubList from \"./SubList/SubList\";\r\n\r\n\r\nimport { IconButton, Button, Divider, FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport {\r\n    VideoCall, Apps, Notifications,\r\n    MoreVert, AccountCircle, PlayCircleOutline, CastRounded,\r\n    MusicVideo, Games, School, Category, Message, Brightness2, LanguageOutlined, Settings, SecurityOutlined, HelpOutline, Feedback, FeedbackOutlined, Keyboard\r\n} from \"@material-ui/icons\";\r\n\r\nconst LeadingControl = (props) => {\r\n    let customStyle = {};\r\n    if (props.style) {\r\n        customStyle = props.style;\r\n    }\r\n\r\n    let [openVideo, setOpenVideo] = useState(false);\r\n    let [openApps, setOpenApps] = useState(false);\r\n    let [openNotify, setOpenNotify] = useState(false);\r\n    let [openMenu, setOpenMenu] = useState(false);\r\n\r\n    let [toggleTheme, setToggleTheme] = useState(true);\r\n\r\n    let allSets = [setOpenVideo, setOpenApps, setOpenNotify, setOpenMenu]\r\n\r\n    function toggle(set) {\r\n        allSets.filter(s => s !== set).forEach(other => other(_ => false));\r\n        set(prev => !prev);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.LeadingControl} style={{ ...customStyle }}>\r\n            <div className={classes.wrapContent} >\r\n                <IconButton onClick={() => { toggle(setOpenVideo) }} className={classes.iconButton}>\r\n                    <VideoCall />\r\n\r\n                </IconButton>\r\n                {openVideo ?\r\n                    <div className={classes.DropDownMenu}>\r\n                        <List size=\"small\">\r\n                            <ListItem text=\"Upload video\" icon={PlayCircleOutline} color=\"red\" />\r\n                            <ListItem text=\"Go live\" icon={CastRounded} color=\"red\" />\r\n                        </List>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n            <div className={classes.wrapContent} >\r\n                <IconButton onClick={() => { toggle(setOpenApps) }} className={classes.iconButton}>\r\n                    <Apps />\r\n\r\n                </IconButton>\r\n                {openApps ?\r\n                    <div className={classes.DropDownMenu}>\r\n                        <List size=\"medium\">\r\n                            <ListItem text=\"Youtube TV\" icon={PlayCircleOutline} color=\"red\" />\r\n                            <Divider className={classes.divider} />\r\n                            <ListItem text=\"Youtube Music\" icon={MusicVideo} color=\"red\" />\r\n                            <ListItem text=\"Youtube Kids\" icon={Games} color=\"red\" />\r\n                            <Divider className={classes.divider} />\r\n                            <ListItem text=\"Creator Academy\" icon={School} color=\"red\" />\r\n                            <ListItem text=\"Youtube For Artists\" icon={Category} color=\"red\" />\r\n                        </List>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n            <div className={classes.wrapContent} >\r\n\r\n                <IconButton onClick={() => { toggle(setOpenNotify) }} className={classes.iconButton}>\r\n                    <Notifications />\r\n\r\n                </IconButton>\r\n                {openNotify ?\r\n                    <div className={classes.DropDownMenu}>\r\n                        <List size=\"large\" header=\"Messages\" >\r\n                            <ListItem text=\"message 1\" icon={Message} color=\"grey\" />\r\n                        </List>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n            <div className={classes.wrapContent} >\r\n                <IconButton onClick={() => { toggle(setOpenMenu) }} className={classes.iconButton}>\r\n                    <MoreVert />\r\n\r\n                </IconButton>\r\n                {openMenu ?\r\n\r\n                    <div className={classes.DropDownMenu}>\r\n                        <List size=\"large\" >\r\n\r\n                            <SubList text=\"Dark theme: on\" icon={Brightness2} color=\"grey\">\r\n                                <ListItem text=\"on/off\" >\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={toggleTheme}\r\n                                                onChange={() => { setToggleTheme(prev => !prev) }}\r\n                                                value=\"checkedB\"\r\n                                                classes={{\r\n                                                    thumb: classes.switch,\r\n                                                    checked: classes.switchCheck,\r\n                                                }}\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label={toggleTheme ? \"on\" : \"off\"}\r\n                                    />\r\n                                </ListItem>\r\n                            </SubList>\r\n                            <SubList text=\"Language\" icon={LanguageOutlined} color=\"grey\">\r\n                                <ListItem text=\"English\" />\r\n                                <ListItem text=\"العربية\" />\r\n                            </SubList>\r\n                            <ListItem text=\"Settings\" icon={Settings} color=\"grey\" />\r\n                            <ListItem text=\"Your data in YouTube\" icon={SecurityOutlined} color=\"grey\" />\r\n                            <ListItem text=\"Help\" icon={HelpOutline} color=\"grey\" />\r\n                            <ListItem text=\"Send feedback\" icon={FeedbackOutlined} color=\"grey\" />\r\n                            <ListItem text=\"Keyboard shortcut\" icon={Keyboard} color=\"grey\" />\r\n                            <Divider className={classes.divider} />\r\n                            <SubList text=\"location: United Arab Emirates\" textColor=\"grey\">\r\n                                <ListItem text=\"United Arab Emirates\" textColor=\"grey\" />\r\n                                <ListItem text=\"Egypt\" textColor=\"grey\" />\r\n                                <ListItem text=\"Saudi Arabia\" textColor=\"grey\" />\r\n                            </SubList>\r\n                            <SubList text=\"restricted Mode: off\" textColor=\"grey\">\r\n                                <ListItem text=\"on/off\" >\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={toggleTheme}\r\n                                                onChange={() => { setToggleTheme(prev => !prev) }}\r\n                                                value=\"checkedB\"\r\n                                                classes={{\r\n                                                    thumb: classes.switch,\r\n                                                    checked: classes.switchCheck,\r\n                                                }}\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label={toggleTheme ? \"on\" : \"off\"}\r\n                                    />\r\n                                </ListItem>\r\n                            </SubList>\r\n                        </List>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n            <div className={classes.wrapContent} >\r\n                <Button variant=\"outlined\" size=\"medium\" className={classes.SignInButton}>\r\n                    <AccountCircle />\r\n                    <span className={classes.SignInText}>Sign In</span>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeadingControl;","import React from 'react';\r\n\r\nimport classes from \"./Navbar.css\";\r\nimport Logo from './Logo/Logo';\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport LeadingControl from './LeadingControl/LeadingControl';\r\nconst Navbar = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.NavbarReserved}>\r\n            </div>\r\n            <div className={classes.Navbar}>\r\n\r\n                <Logo style={{ \"flex\": \"1\" }} />\r\n                <SearchBar style={{ \"flex\": \"3\" }} />\r\n                <LeadingControl />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\n\nimport { connect } from \"react-redux\";\nimport classes from \"./App.css\";\nimport Part1 from \"../Part1/Part1\";\nimport Part2 from \"../Part2/Part2\";\nimport './App.css';\nimport Navbar from '../Navbar/Navbar';\n\nconst App = (props) => {\n  return (\n    <React.Fragment>\n      <Navbar />\n\n    </React.Fragment>);\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n    counter: state.c\n  }\n}\n\nconst mapDispatchToProps = (emit) => {\n  return {\n    onClicked: (evt) => emit({ type: 'alert', evt })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    c: 1,\r\n    b: 22\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    if (action.type === \"alert\") {\r\n        console.log(action.evt);\r\n\r\n        return { ...state, c: state.c + 1 }\r\n    }\r\n    if (action.type === \"updateB\") {\r\n\r\n        return { ...state, b: action.payload.newb }\r\n    }\r\n    return state;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./services/reducer\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}